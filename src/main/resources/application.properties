spring.application.name=SudokuEngine
spring.config.import=classpath:application.secrets.properties

spring.profiles.active=test

server.port=8081
server.servlet.context-path=/api
server.error.path=/error
spring.web.resources.add-mappings=false

################
### POSTGRES ###
################

postgresql.database.url=jdbc:postgresql://
postgresql.database.ip=
postgresql.database.port=5432
postgresql.database.username=
postgresql.database.password=
postgresql.database.name=postgres
postgresql.database.schema=sudoku_db
postgresql.database.driver-class-name=org.postgresql.Driver

##################
### DATASOURCE ###
##################

spring.datasource.url=${postgresql.database.url}${postgresql.database.ip}:${postgresql.database.port}/${postgresql.database.name}
spring.datasource.username=${postgresql.database.username}
spring.datasource.password=${postgresql.database.password}
spring.datasource.driver-class-name=${postgresql.database.driver-class-name}

#####################
### JPA HIBERNATE ###
#####################

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.default_schema=${postgresql.database.schema}
spring.jpa.hibernate.ddl-auto=create

#############
### REDIS ###
#############

spring.data.redis.host=localhost
spring.data.redis.port=6379
#spring.data.redis.username=
#spring.data.redis.password=
spring.data.redis.database=1

################
### ACTUATOR ###
################

management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=health,info,metrics,loggers,httptrace

################
### KEYCLOAK ###
################

spring.security.oauth2.resourceserver.jwt.issuer-uri=
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs

spring.security.oauth2.client.registration.keycloak.client-id=sudoku-api
spring.security.oauth2.client.registration.keycloak.client-secret=
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.redirect-uri=http://localhost:8081/api/login/oauth2/code/keycloak

spring.security.oauth2.client.provider.keycloak.issuer-uri=${spring.security.oauth2.resourceserver.jwt.issuer-uri}
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username


# Redirect unauthorized users to Keycloak login
server.error.whitelabel.enabled=false


#######################
### SPRING SECURITY ###
#######################
logging.level.org.springframework.security.oauth2=DEBUG

####################
### API MAPPINGS ###
####################

api.base.sudoku=/sudoku
api.base.sudoku.generate=/generate
api.base.user=/user
api.base.user.signup=/signup
api.base.user.login=/login
api.base.user.me=/me
api.base.user.oauth2debug=/oauth2debug